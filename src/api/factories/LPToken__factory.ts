/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { LPToken, LPTokenInterface } from "../LPToken";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "name_",
        type: "string",
        internalType: "string",
      },
      {
        name: "lockTime_",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "freeAmount",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "freeBalanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lockQueue",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "head",
        type: "uint128",
        internalType: "uint128",
      },
      {
        name: "tail",
        type: "uint128",
        internalType: "uint128",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "timeCerts",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "until",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161117f38038061117f83398101604081905261002f916100f7565b338280600361003e8282610251565b50600461004b8282610251565b5050506001600160a01b03811661007c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100858161008f565b5060095550610310565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561010a57600080fd5b82516001600160401b038082111561012157600080fd5b818501915085601f83011261013557600080fd5b815181811115610147576101476100e1565b604051601f8201601f19908116603f0116810190838211818310171561016f5761016f6100e1565b8160405282815260209350888484870101111561018b57600080fd5b600091505b828210156101ad5784820184015181830185015290830190610190565b6000928101840192909252509401519395939450505050565b600181811c908216806101da57607f821691505b6020821081036101fa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561024c576000816000526020600020601f850160051c810160208610156102295750805b601f850160051c820191505b8181101561024857828155600101610235565b5050505b505050565b81516001600160401b0381111561026a5761026a6100e1565b61027e8161027884546101c6565b84610200565b602080601f8311600181146102b3576000841561029b5750858301515b600019600386901b1c1916600185901b178555610248565b600085815260208120601f198616915b828110156102e2578886015182559484019460019091019084016102c3565b50858210156103005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e608061031f6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a257806395d89b411161007157806395d89b41146102b45780639dc29fac146102bc578063a9059cbb146102cf578063dd62ed3e146102e2578063f2fde38b1461031b57600080fd5b806370a0823114610214578063715018a61461023d5780638da5cb5b14610245578063904d8fee1461026057600080fd5b8063313ce567116100e9578063313ce5671461018157806340c10f191461019057806346ca48a2146101a5578063543e9954146101c55780636c69b1c9146101d857600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b61012361032e565b6040516101309190610c4e565b60405180910390f35b61014c610147366004610cb9565b6103c0565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610ce3565b6103da565b60405160128152602001610130565b6101a361019e366004610cb9565b6103fe565b005b6101606101b3366004610d1f565b60076020526000908152604090205481565b6101606101d3366004610d1f565b610414565b6101ff6101e6366004610d41565b6008602052600090815260409020805460019091015482565b60408051928352602083019190915201610130565b610160610222366004610d1f565b6001600160a01b031660009081526020819052604090205490565b6101a36104e6565b6005546040516001600160a01b039091168152602001610130565b61029461026e366004610d1f565b6006602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610130565b6101236104fa565b6101a36102ca366004610cb9565b610509565b61014c6102dd366004610cb9565b61051b565b6101606102f0366004610d5a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a3610329366004610d1f565b610529565b60606003805461033d90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461036990610d8d565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b5050505050905090565b6000336103ce81858561056c565b60019150505b92915050565b6000336103e885828561057e565b6103f38585856105fc565b506001949350505050565b61040661065b565b6104108282610688565b5050565b6001600160a01b038116600090815260066020908152604080832060079092529091205481549091906001600160801b03165b8154600160801b90046001600160801b03168110156104df576000600881610478846001600160a01b038916610ddd565b81526020019081526020016000209050610496816000015442101590565b6104a057506104df565b600860006104b7846001600160a01b038916610ddd565b815260200190815260200160002060010154846104d49190610ddd565b935050600101610447565b5050919050565b6104ee61065b565b6104f860006106be565b565b60606004805461033d90610d8d565b61051161065b565b6104108282610710565b6000336103ce8185856105fc565b61053161065b565b6001600160a01b03811661056057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610569816106be565b50565b6105798383836001610746565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105f657818110156105e757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610557565b6105f684848484036000610746565b50505050565b6001600160a01b03831661062657604051634b637e8f60e11b815260006004820152602401610557565b6001600160a01b0382166106505760405163ec442f0560e01b815260006004820152602401610557565b61057983838361081b565b6005546001600160a01b031633146104f85760405163118cdaa760e01b8152336004820152602401610557565b6001600160a01b0382166106b25760405163ec442f0560e01b815260006004820152602401610557565b6104106000838361081b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661073a57604051634b637e8f60e11b815260006004820152602401610557565b6104108260008361081b565b6001600160a01b0384166107705760405163e602df0560e01b815260006004820152602401610557565b6001600160a01b03831661079a57604051634a1406b160e11b815260006004820152602401610557565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105f657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161080d91815260200190565b60405180910390a350505050565b6001600160a01b03831661083e5761083382826108a8565b61057983838361097e565b805b801561085b5760006108528583610aa8565b91506108409050565b61086684848461097e565b6001600160a01b038316156105f6576001600160a01b0383166000908152600760205260408120805484929061089d908490610ddd565b909155505050505050565b6001600160a01b03821660009081526006602052604081206009549091906108d09042610ddd565b6040805180820190915281815260208101859052835491925090600890600090600160801b90046001600160801b03166001600160a01b0388166109149190610ddd565b81526020808201929092526040016000208251815591015160019182015582548390601090610954908490600160801b90046001600160801b0316610df0565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050565b6001600160a01b0383166109a957806002600082825461099e9190610ddd565b90915550610a1b9050565b6001600160a01b038316600090815260208190526040902054818110156109fc5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610557565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a3757600280548290039055610a56565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a9b91815260200190565b60405180910390a3505050565b6001600160a01b038216600090815260066020526040812080546001600160801b03600160801b8204811691161015610baf5780546000906008908290610b01906001600160801b03166001600160a01b038916610ddd565b81526020019081526020016000209050610b1f816000015442101590565b15610bad5783816001015411610b885781546001908390600090610b4d9084906001600160801b0316610df0565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550806001015484610b819190610e17565b9250610ba6565b83816001016000828254610b9c9190610e17565b9091555060009350505b50506103d4565b505b6001600160a01b038416600090815260076020526040902054831115610c175760405162461bcd60e51b815260206004820152601960248201527f696e73756666696369656e7420667265652062616c616e6365000000000000006044820152606401610557565b6001600160a01b03841660009081526007602052604081208054859290610c3f908490610e17565b90915550600095945050505050565b60006020808352835180602085015260005b81811015610c7c57858101830151858201604001528201610c60565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cb457600080fd5b919050565b60008060408385031215610ccc57600080fd5b610cd583610c9d565b946020939093013593505050565b600080600060608486031215610cf857600080fd5b610d0184610c9d565b9250610d0f60208501610c9d565b9150604084013590509250925092565b600060208284031215610d3157600080fd5b610d3a82610c9d565b9392505050565b600060208284031215610d5357600080fd5b5035919050565b60008060408385031215610d6d57600080fd5b610d7683610c9d565b9150610d8460208401610c9d565b90509250929050565b600181811c90821680610da157607f821691505b602082108103610dc157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103d4576103d4610dc7565b6001600160801b03818116838216019080821115610e1057610e10610dc7565b5092915050565b818103818111156103d4576103d4610dc756fea264697066735822122092352b6294d03747917a652f426ca7e7423d83b0410f4d4880ebe2e2b73abbb964736f6c63430008190033";

type LPTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPToken__factory extends ContractFactory {
  constructor(...args: LPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    lockTime_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, lockTime_, overrides || {});
  }
  override deploy(
    name_: string,
    lockTime_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, lockTime_, overrides || {}) as Promise<
      LPToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LPToken__factory {
    return super.connect(runner) as LPToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenInterface {
    return new Interface(_abi) as LPTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LPToken {
    return new Contract(address, _abi, runner) as unknown as LPToken;
  }
}
